# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches:
      - development
      - master
      - qa
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch "development"
        if: github.ref == 'refs/heads/development'
        uses: actions/checkout@v2
        with:
          ref: 'development'
      - name: Checkout branch "master"
        if: github.ref == 'refs/heads/master'
        uses: actions/checkout@v2
        with:
          ref: 'master'     
      - name: Checkout branch "QA"
        if: github.ref == 'refs/heads/qa'
        uses: actions/checkout@v2
        with:
          ref: 'qa' 
      - name: create a release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
  getTag:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          ref: 'master'
          fetch-depth: 0 # Required due to the weg Git
      - name: 'tag plugin'
        id: tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
      - name: tag
        run: echo ${{steps.tag.outputs.tag }}
      - name: 'job id'
        run: echo ${{github.run_id}}
      - name: 'commit id'
        run: echo ${{github.event.commits[0].id}}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: test-package
          IMAGE_TAG: latest
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          echo $ECR_REGISTRY
          # Build a docker container and push it to ECR 
          docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f dockerFile --build-arg tag=${{steps.tag.output.tag}}
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      # - name: docker build
      #   run: |
      #     ls -la
      #     docker build . -t test-package -f dockerFile --build-arg tag=${{steps.tag.output.tag}}
      #     docker tag test-package:latest 964412869874.dkr.ecr.us-east-1.amazonaws.com/test-package:latest
      #     docker push 964412869874.dkr.ecr.us-east-1.amazonaws.com/test-package:latest
      
          



      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: pathak4477
      #     password: P@ssw0rd4477

      # - name: Push to Docker Hub
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: pathak4477/test-package:latest
      #     secrets: |
      #       "GITHUB_TAG=V10.2.4"




           
      # - name: Get current date
      #   id: date
      #   run: echo "::set-output name=date::$(date +'%Y-%m-%d-%s')"
      # - name: Checkout branch "master"
      #   uses: actions/checkout@v2
      #   with:
      #     ref: 'master'
      # - name: Release snapshot
      #   id: release-snapshot
      #   uses: actions/create-release@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.date.outputs.date }}
      #     release_name: ${{ steps.date.outputs.date }}
      #     draft: false
      #     prerelease: false
